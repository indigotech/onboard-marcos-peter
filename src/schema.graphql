type Query {
  user(id: ID!): User!
  users(input: Pagination): UsersListOutput!
}

type Mutation {
  createUser(user: UserInput): User!
  login(login: LoginInput): LoggedUser!
}

type User {
  id: String!
  name: String!
  email: String!
  birthdate: String!
}

type LoggedUser {
  user: User!
  token: String!
}

type UsersListOutput {
  totalUsers: Int!
  before: Int!
  after: Int!
  users: [User]!
}

input LoginInput {
  email: String!
  password: String!
  rememberMe: Boolean
}

input Pagination {
  limit: Int = 5
  skip: Int = 0
}

input UserInput {
  name: String!
  email: String!
  password: String!
  birthdate: String!
}
